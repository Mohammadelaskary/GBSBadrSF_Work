// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentManufacturingAddDefectsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView adddefectTxt;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final ImageView basketImg;

  @NonNull
  public final TextView childCode;

  @NonNull
  public final TextView childDesc;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final TextView defectedDetailsTxt;

  @NonNull
  public final TextView defectedQty;

  @NonNull
  public final TextView defectqtnEdt;

  @NonNull
  public final TextView defectqtnTxt;

  @NonNull
  public final RecyclerView defectsList;

  @NonNull
  public final TextView defectsQty;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView operationTxt;

  @NonNull
  public final ImageView plusIcon;

  @NonNull
  public final TextView sampleQtyEdt;

  @NonNull
  public final TextView sampleqtnTxt;

  @NonNull
  public final MaterialButton saveBtn;

  @NonNull
  public final LinearLayout tableTitle;

  private FragmentManufacturingAddDefectsBinding(@NonNull ScrollView rootView,
      @NonNull TextView adddefectTxt, @NonNull TextInputLayout basketCode,
      @NonNull ImageView basketImg, @NonNull TextView childCode, @NonNull TextView childDesc,
      @NonNull TextView childTxt, @NonNull TextView defectedDetailsTxt,
      @NonNull TextView defectedQty, @NonNull TextView defectqtnEdt, @NonNull TextView defectqtnTxt,
      @NonNull RecyclerView defectsList, @NonNull TextView defectsQty, @NonNull TextView operation,
      @NonNull TextView operationTxt, @NonNull ImageView plusIcon, @NonNull TextView sampleQtyEdt,
      @NonNull TextView sampleqtnTxt, @NonNull MaterialButton saveBtn,
      @NonNull LinearLayout tableTitle) {
    this.rootView = rootView;
    this.adddefectTxt = adddefectTxt;
    this.basketCode = basketCode;
    this.basketImg = basketImg;
    this.childCode = childCode;
    this.childDesc = childDesc;
    this.childTxt = childTxt;
    this.defectedDetailsTxt = defectedDetailsTxt;
    this.defectedQty = defectedQty;
    this.defectqtnEdt = defectqtnEdt;
    this.defectqtnTxt = defectqtnTxt;
    this.defectsList = defectsList;
    this.defectsQty = defectsQty;
    this.operation = operation;
    this.operationTxt = operationTxt;
    this.plusIcon = plusIcon;
    this.sampleQtyEdt = sampleQtyEdt;
    this.sampleqtnTxt = sampleqtnTxt;
    this.saveBtn = saveBtn;
    this.tableTitle = tableTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentManufacturingAddDefectsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentManufacturingAddDefectsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_manufacturing_add_defects, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentManufacturingAddDefectsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adddefect_txt;
      TextView adddefectTxt = ViewBindings.findChildViewById(rootView, id);
      if (adddefectTxt == null) {
        break missingId;
      }

      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.basket_img;
      ImageView basketImg = ViewBindings.findChildViewById(rootView, id);
      if (basketImg == null) {
        break missingId;
      }

      id = R.id.child_code;
      TextView childCode = ViewBindings.findChildViewById(rootView, id);
      if (childCode == null) {
        break missingId;
      }

      id = R.id.child_desc;
      TextView childDesc = ViewBindings.findChildViewById(rootView, id);
      if (childDesc == null) {
        break missingId;
      }

      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.defected_details_txt;
      TextView defectedDetailsTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectedDetailsTxt == null) {
        break missingId;
      }

      id = R.id.defected_qty;
      TextView defectedQty = ViewBindings.findChildViewById(rootView, id);
      if (defectedQty == null) {
        break missingId;
      }

      id = R.id.defectqtn_edt;
      TextView defectqtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (defectqtnEdt == null) {
        break missingId;
      }

      id = R.id.defectqtn_txt;
      TextView defectqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectqtnTxt == null) {
        break missingId;
      }

      id = R.id.defects_list;
      RecyclerView defectsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsList == null) {
        break missingId;
      }

      id = R.id.defects_qty;
      TextView defectsQty = ViewBindings.findChildViewById(rootView, id);
      if (defectsQty == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.operation_txt;
      TextView operationTxt = ViewBindings.findChildViewById(rootView, id);
      if (operationTxt == null) {
        break missingId;
      }

      id = R.id.plus_icon;
      ImageView plusIcon = ViewBindings.findChildViewById(rootView, id);
      if (plusIcon == null) {
        break missingId;
      }

      id = R.id.sample_qty_edt;
      TextView sampleQtyEdt = ViewBindings.findChildViewById(rootView, id);
      if (sampleQtyEdt == null) {
        break missingId;
      }

      id = R.id.sampleqtn_txt;
      TextView sampleqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (sampleqtnTxt == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.table_title;
      LinearLayout tableTitle = ViewBindings.findChildViewById(rootView, id);
      if (tableTitle == null) {
        break missingId;
      }

      return new FragmentManufacturingAddDefectsBinding((ScrollView) rootView, adddefectTxt,
          basketCode, basketImg, childCode, childDesc, childTxt, defectedDetailsTxt, defectedQty,
          defectqtnEdt, defectqtnTxt, defectsList, defectsQty, operation, operationTxt, plusIcon,
          sampleQtyEdt, sampleqtnTxt, saveBtn, tableTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
