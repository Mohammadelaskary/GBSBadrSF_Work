// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPaintMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton colorverificationBtn;

  @NonNull
  public final MaterialButton machineloadingBtn;

  @NonNull
  public final MaterialButton machinesignoffBtn;

  @NonNull
  public final TextView paintmenuTxt;

  @NonNull
  public final MaterialButton productionrepairBtn;

  private FragmentPaintMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton colorverificationBtn, @NonNull MaterialButton machineloadingBtn,
      @NonNull MaterialButton machinesignoffBtn, @NonNull TextView paintmenuTxt,
      @NonNull MaterialButton productionrepairBtn) {
    this.rootView = rootView;
    this.colorverificationBtn = colorverificationBtn;
    this.machineloadingBtn = machineloadingBtn;
    this.machinesignoffBtn = machinesignoffBtn;
    this.paintmenuTxt = paintmenuTxt;
    this.productionrepairBtn = productionrepairBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPaintMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPaintMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_paint_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPaintMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorverification_btn;
      MaterialButton colorverificationBtn = ViewBindings.findChildViewById(rootView, id);
      if (colorverificationBtn == null) {
        break missingId;
      }

      id = R.id.machineloading_btn;
      MaterialButton machineloadingBtn = ViewBindings.findChildViewById(rootView, id);
      if (machineloadingBtn == null) {
        break missingId;
      }

      id = R.id.machinesignoff_btn;
      MaterialButton machinesignoffBtn = ViewBindings.findChildViewById(rootView, id);
      if (machinesignoffBtn == null) {
        break missingId;
      }

      id = R.id.paintmenu_txt;
      TextView paintmenuTxt = ViewBindings.findChildViewById(rootView, id);
      if (paintmenuTxt == null) {
        break missingId;
      }

      id = R.id.productionrepair_btn;
      MaterialButton productionrepairBtn = ViewBindings.findChildViewById(rootView, id);
      if (productionrepairBtn == null) {
        break missingId;
      }

      return new FragmentPaintMenuBinding((ConstraintLayout) rootView, colorverificationBtn,
          machineloadingBtn, machinesignoffBtn, paintmenuTxt, productionrepairBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
