// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMachineloadingweBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView childbasketImg;

  @NonNull
  public final EditText childbasketcodeEdt;

  @NonNull
  public final ImageView childbasketcodeImg;

  @NonNull
  public final TextView childbasketcodeTxt;

  @NonNull
  public final TextView childqtn;

  @NonNull
  public final TextView childqtnTxt;

  @NonNull
  public final MaterialButton itemcomponentBtn;

  @NonNull
  public final TextView loadingqtnTxt;

  @NonNull
  public final TextView loadingqtns;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView operationTxt;

  @NonNull
  public final TextView parentTxt;

  @NonNull
  public final TextView parentcode;

  @NonNull
  public final TextView parentdesc;

  @NonNull
  public final ImageView plus;

  @NonNull
  public final MaterialButton saveBtn;

  @NonNull
  public final EditText stationcodeEdt;

  @NonNull
  public final ImageView stationcodeImg;

  @NonNull
  public final TextView stationcodeTxt;

  @NonNull
  public final TextView stationloadingTxt;

  @NonNull
  public final MaterialButton weldingseqBtn;

  private FragmentMachineloadingweBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView childbasketImg, @NonNull EditText childbasketcodeEdt,
      @NonNull ImageView childbasketcodeImg, @NonNull TextView childbasketcodeTxt,
      @NonNull TextView childqtn, @NonNull TextView childqtnTxt,
      @NonNull MaterialButton itemcomponentBtn, @NonNull TextView loadingqtnTxt,
      @NonNull TextView loadingqtns, @NonNull TextView operation, @NonNull TextView operationTxt,
      @NonNull TextView parentTxt, @NonNull TextView parentcode, @NonNull TextView parentdesc,
      @NonNull ImageView plus, @NonNull MaterialButton saveBtn, @NonNull EditText stationcodeEdt,
      @NonNull ImageView stationcodeImg, @NonNull TextView stationcodeTxt,
      @NonNull TextView stationloadingTxt, @NonNull MaterialButton weldingseqBtn) {
    this.rootView = rootView;
    this.childbasketImg = childbasketImg;
    this.childbasketcodeEdt = childbasketcodeEdt;
    this.childbasketcodeImg = childbasketcodeImg;
    this.childbasketcodeTxt = childbasketcodeTxt;
    this.childqtn = childqtn;
    this.childqtnTxt = childqtnTxt;
    this.itemcomponentBtn = itemcomponentBtn;
    this.loadingqtnTxt = loadingqtnTxt;
    this.loadingqtns = loadingqtns;
    this.operation = operation;
    this.operationTxt = operationTxt;
    this.parentTxt = parentTxt;
    this.parentcode = parentcode;
    this.parentdesc = parentdesc;
    this.plus = plus;
    this.saveBtn = saveBtn;
    this.stationcodeEdt = stationcodeEdt;
    this.stationcodeImg = stationcodeImg;
    this.stationcodeTxt = stationcodeTxt;
    this.stationloadingTxt = stationloadingTxt;
    this.weldingseqBtn = weldingseqBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMachineloadingweBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMachineloadingweBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_machineloadingwe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMachineloadingweBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.childbasket_img;
      ImageView childbasketImg = rootView.findViewById(id);
      if (childbasketImg == null) {
        break missingId;
      }

      id = R.id.childbasketcode_edt;
      EditText childbasketcodeEdt = rootView.findViewById(id);
      if (childbasketcodeEdt == null) {
        break missingId;
      }

      id = R.id.childbasketcode_img;
      ImageView childbasketcodeImg = rootView.findViewById(id);
      if (childbasketcodeImg == null) {
        break missingId;
      }

      id = R.id.childbasketcode_txt;
      TextView childbasketcodeTxt = rootView.findViewById(id);
      if (childbasketcodeTxt == null) {
        break missingId;
      }

      id = R.id.childqtn;
      TextView childqtn = rootView.findViewById(id);
      if (childqtn == null) {
        break missingId;
      }

      id = R.id.childqtn_txt;
      TextView childqtnTxt = rootView.findViewById(id);
      if (childqtnTxt == null) {
        break missingId;
      }

      id = R.id.itemcomponent_btn;
      MaterialButton itemcomponentBtn = rootView.findViewById(id);
      if (itemcomponentBtn == null) {
        break missingId;
      }

      id = R.id.loadingqtn_txt;
      TextView loadingqtnTxt = rootView.findViewById(id);
      if (loadingqtnTxt == null) {
        break missingId;
      }

      id = R.id.loadingqtns;
      TextView loadingqtns = rootView.findViewById(id);
      if (loadingqtns == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = rootView.findViewById(id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.operation_txt;
      TextView operationTxt = rootView.findViewById(id);
      if (operationTxt == null) {
        break missingId;
      }

      id = R.id.parent_txt;
      TextView parentTxt = rootView.findViewById(id);
      if (parentTxt == null) {
        break missingId;
      }

      id = R.id.parentcode;
      TextView parentcode = rootView.findViewById(id);
      if (parentcode == null) {
        break missingId;
      }

      id = R.id.parentdesc;
      TextView parentdesc = rootView.findViewById(id);
      if (parentdesc == null) {
        break missingId;
      }

      id = R.id.plus;
      ImageView plus = rootView.findViewById(id);
      if (plus == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = rootView.findViewById(id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.stationcode_edt;
      EditText stationcodeEdt = rootView.findViewById(id);
      if (stationcodeEdt == null) {
        break missingId;
      }

      id = R.id.stationcode_img;
      ImageView stationcodeImg = rootView.findViewById(id);
      if (stationcodeImg == null) {
        break missingId;
      }

      id = R.id.stationcode_txt;
      TextView stationcodeTxt = rootView.findViewById(id);
      if (stationcodeTxt == null) {
        break missingId;
      }

      id = R.id.stationloading_txt;
      TextView stationloadingTxt = rootView.findViewById(id);
      if (stationloadingTxt == null) {
        break missingId;
      }

      id = R.id.weldingseq_btn;
      MaterialButton weldingseqBtn = rootView.findViewById(id);
      if (weldingseqBtn == null) {
        break missingId;
      }

      return new FragmentMachineloadingweBinding((ConstraintLayout) rootView, childbasketImg,
          childbasketcodeEdt, childbasketcodeImg, childbasketcodeTxt, childqtn, childqtnTxt,
          itemcomponentBtn, loadingqtnTxt, loadingqtns, operation, operationTxt, parentTxt,
          parentcode, parentdesc, plus, saveBtn, stationcodeEdt, stationcodeImg, stationcodeTxt,
          stationloadingTxt, weldingseqBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
