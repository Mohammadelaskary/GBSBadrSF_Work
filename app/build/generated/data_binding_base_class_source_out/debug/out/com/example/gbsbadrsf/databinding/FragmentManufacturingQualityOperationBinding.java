// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentManufacturingQualityOperationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addDefectButton;

  @NonNull
  public final TextView adddefectTxt;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final TextView childCode;

  @NonNull
  public final TextView childDesc;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final ImageView itemcardbarcodeImg;

  @NonNull
  public final TextView jobOrderName;

  @NonNull
  public final TextView jopOrderNameTxt;

  @NonNull
  public final CheckBox newSample;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView operationTxt;

  @NonNull
  public final EditText sampleQtnEdt;

  @NonNull
  public final TextView sampleqtnTxt;

  @NonNull
  public final TextView signoffQtnEdt;

  @NonNull
  public final TextView signoffQtnTxt;

  @NonNull
  public final MaterialButton withoutDefectButton;

  private FragmentManufacturingQualityOperationBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addDefectButton, @NonNull TextView adddefectTxt,
      @NonNull TextInputLayout basketCode, @NonNull TextView childCode, @NonNull TextView childDesc,
      @NonNull TextView childTxt, @NonNull ImageView itemcardbarcodeImg,
      @NonNull TextView jobOrderName, @NonNull TextView jopOrderNameTxt,
      @NonNull CheckBox newSample, @NonNull TextView operation, @NonNull TextView operationTxt,
      @NonNull EditText sampleQtnEdt, @NonNull TextView sampleqtnTxt,
      @NonNull TextView signoffQtnEdt, @NonNull TextView signoffQtnTxt,
      @NonNull MaterialButton withoutDefectButton) {
    this.rootView = rootView;
    this.addDefectButton = addDefectButton;
    this.adddefectTxt = adddefectTxt;
    this.basketCode = basketCode;
    this.childCode = childCode;
    this.childDesc = childDesc;
    this.childTxt = childTxt;
    this.itemcardbarcodeImg = itemcardbarcodeImg;
    this.jobOrderName = jobOrderName;
    this.jopOrderNameTxt = jopOrderNameTxt;
    this.newSample = newSample;
    this.operation = operation;
    this.operationTxt = operationTxt;
    this.sampleQtnEdt = sampleQtnEdt;
    this.sampleqtnTxt = sampleqtnTxt;
    this.signoffQtnEdt = signoffQtnEdt;
    this.signoffQtnTxt = signoffQtnTxt;
    this.withoutDefectButton = withoutDefectButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentManufacturingQualityOperationBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentManufacturingQualityOperationBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_manufacturing_quality_operation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentManufacturingQualityOperationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_defect_button;
      MaterialButton addDefectButton = ViewBindings.findChildViewById(rootView, id);
      if (addDefectButton == null) {
        break missingId;
      }

      id = R.id.adddefect_txt;
      TextView adddefectTxt = ViewBindings.findChildViewById(rootView, id);
      if (adddefectTxt == null) {
        break missingId;
      }

      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.child_code;
      TextView childCode = ViewBindings.findChildViewById(rootView, id);
      if (childCode == null) {
        break missingId;
      }

      id = R.id.child_desc;
      TextView childDesc = ViewBindings.findChildViewById(rootView, id);
      if (childDesc == null) {
        break missingId;
      }

      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.itemcardbarcode_img;
      ImageView itemcardbarcodeImg = ViewBindings.findChildViewById(rootView, id);
      if (itemcardbarcodeImg == null) {
        break missingId;
      }

      id = R.id.job_order_name;
      TextView jobOrderName = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderName == null) {
        break missingId;
      }

      id = R.id.jop_order_name_txt;
      TextView jopOrderNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (jopOrderNameTxt == null) {
        break missingId;
      }

      id = R.id.new_sample;
      CheckBox newSample = ViewBindings.findChildViewById(rootView, id);
      if (newSample == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.operation_txt;
      TextView operationTxt = ViewBindings.findChildViewById(rootView, id);
      if (operationTxt == null) {
        break missingId;
      }

      id = R.id.sample_qtn_edt;
      EditText sampleQtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (sampleQtnEdt == null) {
        break missingId;
      }

      id = R.id.sampleqtn_txt;
      TextView sampleqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (sampleqtnTxt == null) {
        break missingId;
      }

      id = R.id.signoff_qtn_edt;
      TextView signoffQtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (signoffQtnEdt == null) {
        break missingId;
      }

      id = R.id.signoff_qtn_txt;
      TextView signoffQtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (signoffQtnTxt == null) {
        break missingId;
      }

      id = R.id.without_defect_button;
      MaterialButton withoutDefectButton = ViewBindings.findChildViewById(rootView, id);
      if (withoutDefectButton == null) {
        break missingId;
      }

      return new FragmentManufacturingQualityOperationBinding((ConstraintLayout) rootView,
          addDefectButton, adddefectTxt, basketCode, childCode, childDesc, childTxt,
          itemcardbarcodeImg, jobOrderName, jopOrderNameTxt, newSample, operation, operationTxt,
          sampleQtnEdt, sampleqtnTxt, signoffQtnEdt, signoffQtnTxt, withoutDefectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
