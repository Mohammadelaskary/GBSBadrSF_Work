// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMachineLoadingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Joborderqtn;

  @NonNull
  public final TextView JoborderqtnTxt;

  @NonNull
  public final MaterialButton addworkersBtn;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final TextView childcode;

  @NonNull
  public final TextView childesc;

  @NonNull
  public final MaterialButton componentlist;

  @NonNull
  public final EditText diecodeEdt;

  @NonNull
  public final TextView diecodeTxt;

  @NonNull
  public final ImageView diecodebarcodeImg;

  @NonNull
  public final TextView jobordernum;

  @NonNull
  public final TextView jobordernumTxt;

  @NonNull
  public final EditText loadingqtnEdt;

  @NonNull
  public final TextView loadingqtnTxt;

  @NonNull
  public final TextView loadingsequenceid;

  @NonNull
  public final EditText machinecodeEdt;

  @NonNull
  public final TextView machinecodeTxt;

  @NonNull
  public final ImageView machinecodebarcodeImg;

  @NonNull
  public final TextView machineloadingTxt;

  @NonNull
  public final MaterialButton saveBtn;

  private FragmentMachineLoadingBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView Joborderqtn, @NonNull TextView JoborderqtnTxt,
      @NonNull MaterialButton addworkersBtn, @NonNull TextView childTxt,
      @NonNull TextView childcode, @NonNull TextView childesc,
      @NonNull MaterialButton componentlist, @NonNull EditText diecodeEdt,
      @NonNull TextView diecodeTxt, @NonNull ImageView diecodebarcodeImg,
      @NonNull TextView jobordernum, @NonNull TextView jobordernumTxt,
      @NonNull EditText loadingqtnEdt, @NonNull TextView loadingqtnTxt,
      @NonNull TextView loadingsequenceid, @NonNull EditText machinecodeEdt,
      @NonNull TextView machinecodeTxt, @NonNull ImageView machinecodebarcodeImg,
      @NonNull TextView machineloadingTxt, @NonNull MaterialButton saveBtn) {
    this.rootView = rootView;
    this.Joborderqtn = Joborderqtn;
    this.JoborderqtnTxt = JoborderqtnTxt;
    this.addworkersBtn = addworkersBtn;
    this.childTxt = childTxt;
    this.childcode = childcode;
    this.childesc = childesc;
    this.componentlist = componentlist;
    this.diecodeEdt = diecodeEdt;
    this.diecodeTxt = diecodeTxt;
    this.diecodebarcodeImg = diecodebarcodeImg;
    this.jobordernum = jobordernum;
    this.jobordernumTxt = jobordernumTxt;
    this.loadingqtnEdt = loadingqtnEdt;
    this.loadingqtnTxt = loadingqtnTxt;
    this.loadingsequenceid = loadingsequenceid;
    this.machinecodeEdt = machinecodeEdt;
    this.machinecodeTxt = machinecodeTxt;
    this.machinecodebarcodeImg = machinecodebarcodeImg;
    this.machineloadingTxt = machineloadingTxt;
    this.saveBtn = saveBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMachineLoadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMachineLoadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_machine_loading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMachineLoadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Joborderqtn;
      TextView Joborderqtn = ViewBindings.findChildViewById(rootView, id);
      if (Joborderqtn == null) {
        break missingId;
      }

      id = R.id.Joborderqtn_txt;
      TextView JoborderqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (JoborderqtnTxt == null) {
        break missingId;
      }

      id = R.id.addworkers_btn;
      MaterialButton addworkersBtn = ViewBindings.findChildViewById(rootView, id);
      if (addworkersBtn == null) {
        break missingId;
      }

      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.childcode;
      TextView childcode = ViewBindings.findChildViewById(rootView, id);
      if (childcode == null) {
        break missingId;
      }

      id = R.id.childesc;
      TextView childesc = ViewBindings.findChildViewById(rootView, id);
      if (childesc == null) {
        break missingId;
      }

      id = R.id.componentlist;
      MaterialButton componentlist = ViewBindings.findChildViewById(rootView, id);
      if (componentlist == null) {
        break missingId;
      }

      id = R.id.diecode_edt;
      EditText diecodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (diecodeEdt == null) {
        break missingId;
      }

      id = R.id.diecode_txt;
      TextView diecodeTxt = ViewBindings.findChildViewById(rootView, id);
      if (diecodeTxt == null) {
        break missingId;
      }

      id = R.id.diecodebarcode_img;
      ImageView diecodebarcodeImg = ViewBindings.findChildViewById(rootView, id);
      if (diecodebarcodeImg == null) {
        break missingId;
      }

      id = R.id.jobordernum;
      TextView jobordernum = ViewBindings.findChildViewById(rootView, id);
      if (jobordernum == null) {
        break missingId;
      }

      id = R.id.jobordernum_txt;
      TextView jobordernumTxt = ViewBindings.findChildViewById(rootView, id);
      if (jobordernumTxt == null) {
        break missingId;
      }

      id = R.id.loadingqtn_edt;
      EditText loadingqtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (loadingqtnEdt == null) {
        break missingId;
      }

      id = R.id.loadingqtn_txt;
      TextView loadingqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (loadingqtnTxt == null) {
        break missingId;
      }

      id = R.id.loadingsequenceid;
      TextView loadingsequenceid = ViewBindings.findChildViewById(rootView, id);
      if (loadingsequenceid == null) {
        break missingId;
      }

      id = R.id.machinecode_edt;
      EditText machinecodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (machinecodeEdt == null) {
        break missingId;
      }

      id = R.id.machinecode_txt;
      TextView machinecodeTxt = ViewBindings.findChildViewById(rootView, id);
      if (machinecodeTxt == null) {
        break missingId;
      }

      id = R.id.machinecodebarcode_img;
      ImageView machinecodebarcodeImg = ViewBindings.findChildViewById(rootView, id);
      if (machinecodebarcodeImg == null) {
        break missingId;
      }

      id = R.id.machineloading_txt;
      TextView machineloadingTxt = ViewBindings.findChildViewById(rootView, id);
      if (machineloadingTxt == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      return new FragmentMachineLoadingBinding((ConstraintLayout) rootView, Joborderqtn,
          JoborderqtnTxt, addworkersBtn, childTxt, childcode, childesc, componentlist, diecodeEdt,
          diecodeTxt, diecodebarcodeImg, jobordernum, jobordernumTxt, loadingqtnEdt, loadingqtnTxt,
          loadingsequenceid, machinecodeEdt, machinecodeTxt, machinecodebarcodeImg,
          machineloadingTxt, saveBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
