// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeldingMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton baskettransferBtn;

  @NonNull
  public final MaterialButton machineloadingBtn;

  @NonNull
  public final MaterialButton machinesignoffBtn;

  @NonNull
  public final MaterialButton productionrepairBtn;

  @NonNull
  public final MaterialButton qualityscraprequestBtn;

  @NonNull
  public final MaterialButton scraprequestBtn;

  @NonNull
  public final TextView weldingmenu;

  private FragmentWeldingMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton baskettransferBtn, @NonNull MaterialButton machineloadingBtn,
      @NonNull MaterialButton machinesignoffBtn, @NonNull MaterialButton productionrepairBtn,
      @NonNull MaterialButton qualityscraprequestBtn, @NonNull MaterialButton scraprequestBtn,
      @NonNull TextView weldingmenu) {
    this.rootView = rootView;
    this.baskettransferBtn = baskettransferBtn;
    this.machineloadingBtn = machineloadingBtn;
    this.machinesignoffBtn = machinesignoffBtn;
    this.productionrepairBtn = productionrepairBtn;
    this.qualityscraprequestBtn = qualityscraprequestBtn;
    this.scraprequestBtn = scraprequestBtn;
    this.weldingmenu = weldingmenu;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeldingMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeldingMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welding_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeldingMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.baskettransfer_btn;
      MaterialButton baskettransferBtn = ViewBindings.findChildViewById(rootView, id);
      if (baskettransferBtn == null) {
        break missingId;
      }

      id = R.id.machineloading_btn;
      MaterialButton machineloadingBtn = ViewBindings.findChildViewById(rootView, id);
      if (machineloadingBtn == null) {
        break missingId;
      }

      id = R.id.machinesignoff_btn;
      MaterialButton machinesignoffBtn = ViewBindings.findChildViewById(rootView, id);
      if (machinesignoffBtn == null) {
        break missingId;
      }

      id = R.id.productionrepair_btn;
      MaterialButton productionrepairBtn = ViewBindings.findChildViewById(rootView, id);
      if (productionrepairBtn == null) {
        break missingId;
      }

      id = R.id.qualityscraprequest_btn;
      MaterialButton qualityscraprequestBtn = ViewBindings.findChildViewById(rootView, id);
      if (qualityscraprequestBtn == null) {
        break missingId;
      }

      id = R.id.scraprequest_btn;
      MaterialButton scraprequestBtn = ViewBindings.findChildViewById(rootView, id);
      if (scraprequestBtn == null) {
        break missingId;
      }

      id = R.id.weldingmenu;
      TextView weldingmenu = ViewBindings.findChildViewById(rootView, id);
      if (weldingmenu == null) {
        break missingId;
      }

      return new FragmentWeldingMenuBinding((ConstraintLayout) rootView, baskettransferBtn,
          machineloadingBtn, machinesignoffBtn, productionrepairBtn, qualityscraprequestBtn,
          scraprequestBtn, weldingmenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
