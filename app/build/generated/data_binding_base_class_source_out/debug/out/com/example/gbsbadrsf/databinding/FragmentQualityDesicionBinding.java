// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentQualityDesicionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView DefectqtnTxt;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final ImageView basketbarcodeImg;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final TextView childcode;

  @NonNull
  public final TextView childesc;

  @NonNull
  public final LinearLayout constraint;

  @NonNull
  public final RecyclerView defectedQtnDefectsQtyRecycler;

  @NonNull
  public final TextView defectnameTxt;

  @NonNull
  public final TextView defectqtn;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView operationTxt;

  @NonNull
  public final TextView qcdecisionXt;

  @NonNull
  public final AppCompatSpinner qfinaldesicionSpin;

  @NonNull
  public final TextView qualitydesicionTxt;

  @NonNull
  public final TextView sampleqtyTxt;

  @NonNull
  public final MaterialButton saveBtn;

  private FragmentQualityDesicionBinding(@NonNull ScrollView rootView,
      @NonNull TextView DefectqtnTxt, @NonNull TextInputLayout basketCode,
      @NonNull ImageView basketbarcodeImg, @NonNull TextView childTxt, @NonNull TextView childcode,
      @NonNull TextView childesc, @NonNull LinearLayout constraint,
      @NonNull RecyclerView defectedQtnDefectsQtyRecycler, @NonNull TextView defectnameTxt,
      @NonNull TextView defectqtn, @NonNull TextView operation, @NonNull TextView operationTxt,
      @NonNull TextView qcdecisionXt, @NonNull AppCompatSpinner qfinaldesicionSpin,
      @NonNull TextView qualitydesicionTxt, @NonNull TextView sampleqtyTxt,
      @NonNull MaterialButton saveBtn) {
    this.rootView = rootView;
    this.DefectqtnTxt = DefectqtnTxt;
    this.basketCode = basketCode;
    this.basketbarcodeImg = basketbarcodeImg;
    this.childTxt = childTxt;
    this.childcode = childcode;
    this.childesc = childesc;
    this.constraint = constraint;
    this.defectedQtnDefectsQtyRecycler = defectedQtnDefectsQtyRecycler;
    this.defectnameTxt = defectnameTxt;
    this.defectqtn = defectqtn;
    this.operation = operation;
    this.operationTxt = operationTxt;
    this.qcdecisionXt = qcdecisionXt;
    this.qfinaldesicionSpin = qfinaldesicionSpin;
    this.qualitydesicionTxt = qualitydesicionTxt;
    this.sampleqtyTxt = sampleqtyTxt;
    this.saveBtn = saveBtn;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentQualityDesicionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentQualityDesicionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_quality_desicion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentQualityDesicionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Defectqtn_txt;
      TextView DefectqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (DefectqtnTxt == null) {
        break missingId;
      }

      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.basketbarcode_img;
      ImageView basketbarcodeImg = ViewBindings.findChildViewById(rootView, id);
      if (basketbarcodeImg == null) {
        break missingId;
      }

      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.childcode;
      TextView childcode = ViewBindings.findChildViewById(rootView, id);
      if (childcode == null) {
        break missingId;
      }

      id = R.id.childesc;
      TextView childesc = ViewBindings.findChildViewById(rootView, id);
      if (childesc == null) {
        break missingId;
      }

      id = R.id.constraint;
      LinearLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.defected_qtn_defects_qty_recycler;
      RecyclerView defectedQtnDefectsQtyRecycler = ViewBindings.findChildViewById(rootView, id);
      if (defectedQtnDefectsQtyRecycler == null) {
        break missingId;
      }

      id = R.id.defectname_txt;
      TextView defectnameTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectnameTxt == null) {
        break missingId;
      }

      id = R.id.defectqtn;
      TextView defectqtn = ViewBindings.findChildViewById(rootView, id);
      if (defectqtn == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.operation_txt;
      TextView operationTxt = ViewBindings.findChildViewById(rootView, id);
      if (operationTxt == null) {
        break missingId;
      }

      id = R.id.qcdecision_xt;
      TextView qcdecisionXt = ViewBindings.findChildViewById(rootView, id);
      if (qcdecisionXt == null) {
        break missingId;
      }

      id = R.id.qfinaldesicion_spin;
      AppCompatSpinner qfinaldesicionSpin = ViewBindings.findChildViewById(rootView, id);
      if (qfinaldesicionSpin == null) {
        break missingId;
      }

      id = R.id.qualitydesicion_txt;
      TextView qualitydesicionTxt = ViewBindings.findChildViewById(rootView, id);
      if (qualitydesicionTxt == null) {
        break missingId;
      }

      id = R.id.sampleqty_txt;
      TextView sampleqtyTxt = ViewBindings.findChildViewById(rootView, id);
      if (sampleqtyTxt == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      return new FragmentQualityDesicionBinding((ScrollView) rootView, DefectqtnTxt, basketCode,
          basketbarcodeImg, childTxt, childcode, childesc, constraint,
          defectedQtnDefectsQtyRecycler, defectnameTxt, defectqtn, operation, operationTxt,
          qcdecisionXt, qfinaldesicionSpin, qualitydesicionTxt, sampleqtyTxt, saveBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
