// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.repository;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Productionsequencerepository_MembersInjector implements MembersInjector<Productionsequencerepository> {
  private final Provider<ApiInterface> apiInterfaceProvider;

  public Productionsequencerepository_MembersInjector(Provider<ApiInterface> apiInterfaceProvider) {
    this.apiInterfaceProvider = apiInterfaceProvider;
  }

  public static MembersInjector<Productionsequencerepository> create(
      Provider<ApiInterface> apiInterfaceProvider) {
    return new Productionsequencerepository_MembersInjector(apiInterfaceProvider);}

  @Override
  public void injectMembers(Productionsequencerepository instance) {
    injectApiInterface(instance, apiInterfaceProvider.get());
  }

  @InjectedFieldSignature("com.example.gbsbadrsf.repository.Productionsequencerepository.apiInterface")
  public static void injectApiInterface(Productionsequencerepository instance,
      ApiInterface apiInterface) {
    instance.apiInterface = apiInterface;
  }
}
