// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.Production.Data;

import com.example.gbsbadrsf.repository.ApiInterface;
import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductionRepairViewModel_Factory implements Factory<ProductionRepairViewModel> {
  private final Provider<Gson> gsonProvider;

  private final Provider<ApiInterface> apiInterfaceProvider;

  private final Provider<Gson> gsonProvider2;

  public ProductionRepairViewModel_Factory(Provider<Gson> gsonProvider,
      Provider<ApiInterface> apiInterfaceProvider, Provider<Gson> gsonProvider2) {
    this.gsonProvider = gsonProvider;
    this.apiInterfaceProvider = apiInterfaceProvider;
    this.gsonProvider2 = gsonProvider2;
  }

  @Override
  public ProductionRepairViewModel get() {
    ProductionRepairViewModel instance = newInstance(gsonProvider.get());
    ProductionRepairViewModel_MembersInjector.injectApiInterface(instance, apiInterfaceProvider.get());
    ProductionRepairViewModel_MembersInjector.injectGson(instance, gsonProvider2.get());
    return instance;
  }

  public static ProductionRepairViewModel_Factory create(Provider<Gson> gsonProvider,
      Provider<ApiInterface> apiInterfaceProvider, Provider<Gson> gsonProvider2) {
    return new ProductionRepairViewModel_Factory(gsonProvider, apiInterfaceProvider, gsonProvider2);
  }

  public static ProductionRepairViewModel newInstance(Gson gson) {
    return new ProductionRepairViewModel(gson);
  }
}
