// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.repository;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Productionsequencerepository_Factory implements Factory<Productionsequencerepository> {
  private final Provider<ApiInterface> apiInterfaceProvider;

  public Productionsequencerepository_Factory(Provider<ApiInterface> apiInterfaceProvider) {
    this.apiInterfaceProvider = apiInterfaceProvider;
  }

  @Override
  public Productionsequencerepository get() {
    Productionsequencerepository instance = newInstance();
    Productionsequencerepository_MembersInjector.injectApiInterface(instance, apiInterfaceProvider.get());
    return instance;
  }

  public static Productionsequencerepository_Factory create(
      Provider<ApiInterface> apiInterfaceProvider) {
    return new Productionsequencerepository_Factory(apiInterfaceProvider);
  }

  public static Productionsequencerepository newInstance() {
    return new Productionsequencerepository();
  }
}
