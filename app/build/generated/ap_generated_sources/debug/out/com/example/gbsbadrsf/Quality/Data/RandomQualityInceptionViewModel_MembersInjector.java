// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.Quality.Data;

import com.example.gbsbadrsf.repository.ApiInterface;
import com.google.gson.Gson;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RandomQualityInceptionViewModel_MembersInjector implements MembersInjector<RandomQualityInceptionViewModel> {
  private final Provider<ApiInterface> apiInterfaceProvider;

  private final Provider<Gson> gsonProvider;

  public RandomQualityInceptionViewModel_MembersInjector(
      Provider<ApiInterface> apiInterfaceProvider, Provider<Gson> gsonProvider) {
    this.apiInterfaceProvider = apiInterfaceProvider;
    this.gsonProvider = gsonProvider;
  }

  public static MembersInjector<RandomQualityInceptionViewModel> create(
      Provider<ApiInterface> apiInterfaceProvider, Provider<Gson> gsonProvider) {
    return new RandomQualityInceptionViewModel_MembersInjector(apiInterfaceProvider, gsonProvider);
  }

  @Override
  public void injectMembers(RandomQualityInceptionViewModel instance) {
    injectApiInterface(instance, apiInterfaceProvider.get());
    injectGson(instance, gsonProvider.get());
  }

  @InjectedFieldSignature("com.example.gbsbadrsf.Quality.Data.RandomQualityInceptionViewModel.apiInterface")
  public static void injectApiInterface(RandomQualityInceptionViewModel instance,
      ApiInterface apiInterface) {
    instance.apiInterface = apiInterface;
  }

  @InjectedFieldSignature("com.example.gbsbadrsf.Quality.Data.RandomQualityInceptionViewModel.gson")
  public static void injectGson(RandomQualityInceptionViewModel instance, Gson gson) {
    instance.gson = gson;
  }
}
