// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final RetrofitModule module;

  public RetrofitModule_ProvideLoggingInterceptorFactory(RetrofitModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideLoggingInterceptor(module);
  }

  public static RetrofitModule_ProvideLoggingInterceptorFactory create(RetrofitModule module) {
    return new RetrofitModule_ProvideLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideLoggingInterceptor(RetrofitModule instance) {
    return Preconditions.checkNotNull(instance.provideLoggingInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
