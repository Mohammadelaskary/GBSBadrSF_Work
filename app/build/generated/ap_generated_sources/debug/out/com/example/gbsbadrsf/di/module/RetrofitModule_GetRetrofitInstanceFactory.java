// Generated by Dagger (https://dagger.dev).
package com.example.gbsbadrsf.di.module;

import com.google.gson.Gson;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_GetRetrofitInstanceFactory implements Factory<Retrofit> {
  private final Provider<Gson> gsonProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public RetrofitModule_GetRetrofitInstanceFactory(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    this.gsonProvider = gsonProvider;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public Retrofit get() {
    return getRetrofitInstance(gsonProvider.get(), okHttpClientProvider.get());
  }

  public static RetrofitModule_GetRetrofitInstanceFactory create(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new RetrofitModule_GetRetrofitInstanceFactory(gsonProvider, okHttpClientProvider);
  }

  public static Retrofit getRetrofitInstance(Gson gson, OkHttpClient okHttpClient) {
    return Preconditions.checkNotNull(RetrofitModule.getRetrofitInstance(gson, okHttpClient), "Cannot return null from a non-@Nullable @Provides method");
  }
}
